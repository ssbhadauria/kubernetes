# -----------------------------------------------------------------------------
# Kong parameters
# -----------------------------------------------------------------------------
name: kong-cp
image:
  repository: kong/kong-gateway 
  tag: "latest"
  #effectiveSemver: 3.4.1
  effectiveSemver: 3.5.0.1

command:
- cat
args:
- "/etc/hosts/"

deployment:
  hostAliases:
  - ip: 23.251.158.7
    hostnames:
    - "keycloak.local.lan"
    - "smtp.local.lan"
    - "ldap.local.lan"
env:
  role: control_plane
  database: postgres
  pg_user: kong
  pg_database: kong
  #pg_host:
  #  valueFrom:
  #    secretKeyRef:
  #      key: pg_host
  #      name: kong-config-secret
  pg_password:
    valueFrom:
      secretKeyRef:
        key: kong_pg_password
        name: kong-config-secret 
  pg_ssl: "off"
  pg_ssl_verify: "off" 
  #prefix: /usr/local/kong/
  admin_gui_url: "https://adminapi.local.lan"
  admin_gui_path: "/manager"
  admin_api_uri: "https://adminapi.local.lan"
  admin_gui_ssl_cert_key: /etc/secrets/kong-client-ssl/tls.key 
  admin_gui_ssl_cert: /etc/secrets/kong-client-ssl/tls.crt
  admin_ssl_cert_key: /etc/secrets/kong-cluster-tls/tls.key 
  admin_ssl_cert: /etc/secrets/kong-cluster-tls/tls.crt
  portal_gui_host: "portal.local.lan"
  portal_gui_protocol: "https"
  portal_cors_origins: "*"
  portal: on
  #portal_api_url: "https://portal.local.lan:8447"
  #portal_gui_url: "https://portal.local.lan:8446"
  portal_api_url: "https://portal.local.lan"
  portal_gui_url: "https://portal.local.lan"
  portal_gui_ssl_cert_key: /etc/secrets/kong-client-ssl/tls.key 
  portal_gui_ssl_cert: /etc/secrets/kong-client-ssl/tls.crt
  portal_api_ssl_cert_key: /etc/secrets/kong-cluster-tls/tls.key 
  portal_api_ssl_cert: /etc/secrets/kong-cluster-tls/tls.crt
  cluster_mtls: "pki"
  cluster_cert_key: /etc/secrets/kong-cluster-tls/tls.key
  cluster_cert: /etc/secrets/kong-cluster-tls/tls.crt
  cluster_ca_cert:
    valueFrom:
      secretKeyRef:
        name: tls-ca 
        key: ca.crt 
  lua_ssl_trusted_certificate:
    valueFrom:
      secretKeyRef:
        name: tls-ca 
        key: ca.crt 
  #log_level: notice 
  log_level: debug 
  password:
    valueFrom:
      secretKeyRef:
        name: kong-config-secret
        key: password
  #password: kong
  #admin_token:
  #  valueFrom:
  #    secretKeyRef:
  #      name: kong-config-secret
  #      key: kong_admin_password

  portal_session_conf:
    valueFrom:
      secretKeyRef:
        name: kong-config-secret 
        key: portal_session_conf

  #admin_gui_session_conf:
  #  valueFrom:
  #    secretKeyRef:
  #      #name: kong-session-config
  #      name: kong-config-secret 
  #      key: admin_gui_session_conf 

  #admin_gui_auth_conf:
  #  valueFrom:
  #    secretKeyRef:
  #      name: kong-auth-secret
  #      key: admin_gui_auth_conf 

secretVolumes:
  - kong-client-ssl
  - kong-cluster-tls

proxy:
  enabled: false

admin:
  annotations:
    konghq.com/protocol: https
  enabled: true
  type: ClusterIP 
  http:
    enabled: true 
    servicePort: 8001
    containerPort: 8001
  tls:
    enabled: true 
    servicePort: 8444 
    containerPort: 8444
    parameters:
    - http2
  ingress:
    enabled: false 
    tls: kong-cluster-tls
    hostname: manager.local.lan
    path: /admin
    annotations:
      #konghq.com/https-redirect-status-code: "301"
      #konghq.com/strip-path: "true"
      #kubernetes.io/ingress.class: default
      #nginx.ingress.kubernetes.io/app-root: /
      #nginx.ingress.kubernetes.io/permanent-redirect-code: "301"
      nginx.ingress.kubernetes.io/backend-protocol: HTTPS
      kubernetes.io/ingress.class: kong
      konghq.com/protocols: "https"

manager:
  annotations:
    konghq.com/protocol: https
  enabled: true
  type: ClusterIP 
  http:
    enabled: true 
    servicePort: 8002
    containerPort: 8002
  tls:
    enabled: true 
    servicePort: 8445
    containerPort: 8445
    parameters:
    - http2
  ingress:
    enabled: false 
    tls: kong-client-ssl
    hostname: manager.local.lan
    path: /manager
    annotations:
      #konghq.com/https-redirect-status-code: "301"
      #kubernetes.io/ingress.class: kong 
      nginx.ingress.kubernetes.io/backend-protocol: HTTPS
      konghq.com/protocols: "https"

portal:
  annotations:
    konghq.com/protocol: https
  enabled: true 
  type: ClusterIP 
  http:
    enabled: true 
    servicePort: 8003
    containerPort: 8003
  tls:
    enabled: true 
    servicePort: 8446
    containerPort: 8446
    parameters:
    - http2
  ingress:
    enabled: false 
    tls: kong-client-ssl
    hostname: manager.local.lan
    path: /portal
    annotations:
      konghq.com/https-redirect-status-code: "301"
      konghq.com/protocols: https
      konghq.com/strip-path: "false"
      kubernetes.io/ingress.class: default

portalapi:
  annotations:
    konghq.com/protocol: https
  enabled: true 
  type: ClusterIP 
  http:
    enabled: true 
    servicePort: 8004
    containerPort: 8004
  tls:
    enabled: true 
    servicePort: 8447
    containerPort: 8447
    parameters:
    - http2
  ingress:
    enabled: false 
    tls: kong-cluster-tls
    hostname: manager.local.lan
    path: /portal/api
    annotations:
      konghq.com/https-redirect-status-code: "301"
      konghq.com/protocols: https
      konghq.com/strip-path: "true"
      kubernetes.io/ingress.class: default
      nginx.ingress.kubernetes.io/app-root: /

cluster:
  enabled: true
  tls:
    enabled: true
    servicePort: 8005
    containerPort: 8005
clustertelemetry:
  enabled: true
  tls:
    enabled: true
    servicePort: 8006
    containerPort: 8006
# -----------------------------------------------------------------------------
# Kong Enterprise parameters
# -----------------------------------------------------------------------------
enterprise:
  enabled: true
  license_secret: kong-enterprise-license
  vitals:
    enabled: true 
  portal:
    enabled: true
  rbac:
    enabled: true 
    #admin_gui_auth: basic-auth 
    admin_gui_auth: openid-connect 
    #admin_gui_auth: ldap-auth-advanced 
    portal_auth: basic-auth
    session_conf_secret: kong-config-secret
    admin_gui_auth_conf_secret: kong-config-secret
  smtp:
    enabled: true 
    portal_emails_from: portal_admin@local.lan
    portal_emails_reply_to: no-reply-kong-portal@local.lan
    admin_emails_from: kong_admin@local.lan
    admin_emails_reply_to: no-reply-kong@local.lan
    smtp_admin_emails: kong_smtp@local.lan
    smtp_host: smtp.local.lan
    smtp_port: 587
    smtp_auth_type: ''
    smtp_ssl: nil
    smtp_starttls: true
    auth:
      smtp_username: '' 
      smtp_password_secret: kong

replicaCount: 1 

# -----------------------------------------------------------------------------
# Postgres sub-chart parameters
# -----------------------------------------------------------------------------
postgresql:
  enabled: true
  ##auth:
  ##  database: kong
  ##  username: kong
  #postgresqlUsername: kong
  #postgresqlPassword: kong
  #postgresqlDatabase: kong
  image:
   # # use postgres < 14 until is https://github.com/Kong/kong/issues/8533 resolved and released
   # # enterprise (kong-gateway) supports postgres 14
   # #tag: 13.6.0-debian-10-r52
   # tag: 13.6-alpine
    tag: 13.11.0-debian-11-r20
  service:
    port: 5432
# -----------------------------------------------------------------------------
# Ingress Controller parameters
# -----------------------------------------------------------------------------
ingressController:
  enabled: true 
#  gatewayDiscovery:
#    enabled: true 
#    adminApiService:
#      namespace: "cp"
#      name: "kic-cp-kong-admin" 
  installCRDs: false
  env:
    #kong_admin_filter_tag: ingress_controller_default
    kong_admin_tls_skip_verify: true
    kong_admin_token:
      valueFrom:
        secretKeyRef:
          name: kong-config-secret
          key: kong_admin_password
    kong_admin_url: https://127.0.0.1:8444
    kong_workspace: default
    publish_service: dp/kic-dp-kong-proxy
    #ingress_class: test
    default_backend_service: dp/kic-dp-kong-proxy
  image:
    repository: docker.io/kong/kubernetes-ingress-controller
    #tag: "2.10"
    tag: "3.0"
  #ingressClass: default
migrations:
  enabled: true
  postUpgrade: true
  preUpgrade: true
status:
  enabled: true
  http:
    containerPort: 8100
    enabled: true
  tls:
    containerPort: 8543
    enabled: false
