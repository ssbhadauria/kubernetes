image:
  repository: kong/kong-gateway 
  tag: "3.3"

env:
  database: postgres
  pg_user: kong
  pg_database: kong
  pg_password:
    valueFrom:
      secretKeyRef:
        name: kong-config-secret 
        key: kong_pg_password 
  admin_api_uri: "https://adminapi.gke.lan:8444"
  admin_gui_url: "https://manager.gke.lan:8445"
  admin_gui_ssl_cert_key: /etc/secrets/kong-client-ssl/tls.key 
  admin_gui_ssl_cert: /etc/secrets/kong-client-ssl/tls.crt
  admin_ssl_cert_key: /etc/secrets/kong-cluster-tls/tls.key 
  admin_ssl_cert: /etc/secrets/kong-cluster-tls/tls.crt
  portal_gui_host: "portal.gke.lan:8446"
  portal_gui_protocol: "https"
  portal_cors_origins: "*"
  portal: on
  portal_api_url: "https://portalapi.gke.lan:8447"
  portal_gui_ssl_cert_key: /etc/secrets/kong-client-ssl/tls.key 
  portal_gui_ssl_cert: /etc/secrets/kong-client-ssl/tls.crt
  portal_api_ssl_cert_key: /etc/secrets/kong-cluster-tls/tls.key 
  portal_api_ssl_cert: /etc/secrets/kong-cluster-tls/tls.crt

  role: control_plane
  cluster_mtls: "pki"
  cluster_cert_key: /etc/secrets/kong-cluster-tls/tls.key
  cluster_cert: /etc/secrets/kong-cluster-tls/tls.crt
  cluster_ca_cert:
    valueFrom:
      secretKeyRef:
        name: tls-ca 
        key: ca.crt 
  lua_ssl_trusted_certificate:
    valueFrom:
      secretKeyRef:
        name: tls-ca 
        key: ca.crt 
  #log_level: debug
  password: kong
  #  valueFrom:
  #    secretKeyRef:
  #      name: kong-config-secret
  #      key: password

  #admin_gui_session_conf:
  #  valueFrom:
  #    secretKeyRef:
  #      name: kong-config-secret
  #      key: admin_gui_session_conf

  #admin_gui_auth_conf:
  #  valueFrom:
  #    secretKeyRef:
  #      name: kong-auth-secret
  #      key: admin_gui_auth_conf

  portal_session_conf:
    valueFrom:
      secretKeyRef:
        name: kong-config-secret 
        key: portal_session_conf

secretVolumes:
  - kong-client-ssl
  - kong-cluster-tls

proxy:
  enabled: false

admin:
  enabled: true
  type: LoadBalancer 
  http:
    enabled: true 
    servicePort: 8001
    containerPort: 8001
  tls:
    enabled: true 
    servicePort: 8444 
    containerPort: 8444
    parameters:
    - http2
  ingress:
    enabled: false 
    tls: kong-cluster-tls
    hostname: adminapi.gke.lan
    path: /
    annotations:
      kubernetes.io/ingress.class: "kong"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"

manager:
  enabled: true
  type: LoadBalancer 
  http:
    enabled: true 
    servicePort: 8002
    containerPort: 8002
  tls:
    enabled: true 
    servicePort: 8445
    containerPort: 8445
    parameters:
    - http2
  ingress:
    enabled: false 
    tls: kong-client-ssl
    hostname: manager.gke.lan
    path: /
    annotations:
      kubernetes.io/ingress.class: "kong"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"

portal:
  enabled: true 
  type: LoadBalancer 
  http:
    enabled: true 
    servicePort: 8003
    containerPort: 8003
  tls:
    enabled: true 
    servicePort: 8446
    containerPort: 8446
    parameters:
    - http2
  ingress:
    enabled: false 
    tls: kong-client-ssl
    hostname: portal.gke.lan
    path: /
    annotations:
      kubernetes.io/ingress.class: "kong"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"

portalapi:
  enabled: true 
  type: LoadBalancer 
  http:
    enabled: true 
    servicePort: 8004
    containerPort: 8004
  tls:
    enabled: true 
    servicePort: 8447
    containerPort: 8447
    parameters:
    - http2
  ingress:
    enabled: false 
    tls: kong-cluster-tls
    hostname: portalapi.gke.lan
    path: /
    annotations:
      kubernetes.io/ingress.class: "kong"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"

cluster:
  enabled: true
  tls:
    enabled: true
    servicePort: 8005
    containerPort: 8005

clustertelemetry:
  enabled: true
  tls:
    enabled: true
    servicePort: 8006
    containerPort: 8006

enterprise:
  enabled: true
  license_secret: kong-enterprise-license
  vitals:
    enabled: true 
  portal:
    enabled: true
  rbac:
    enabled: true 
    #admin_gui_auth: openid-connect
    admin_gui_auth: basic-auth 
    portal_auth: basic-auth
    session_conf_secret: kong-config-secret 
    #admin_gui_auth_conf_secret: kong-auth-secret 
  smtp:
    enabled: false
    portal_emails_from: none@example.com
    portal_emails_reply_to: none@example.com
    admin_emails_from: none@example.com
    admin_emails_reply_to: none@example.com
    smtp_admin_emails: none@example.com
    smtp_host: smtp.example.com
    smtp_port: 587
    smtp_auth_type: ''
    smtp_ssl: nil
    smtp_starttls: true
    auth:
      smtp_username: '' 
      smtp_password_secret: CHANGEME-smtp-password

replicaCount: 2 

postgresql:
  enabled: true
  ##postgresqlUsername: kong
  ##postgresqlPassword: kong
  ##postgresqlDatabase: kong
#  existingSecret: kong-pg-secret 
  service:
    port: 5432

ingressController:
  enabled: false 
  installCRDs: false
  env:
#     admin_listen: "0.0.0.0:8001,0.0.0.0:8444 ssl"
#     publish_service: dp/kee-dp-kong-proxy
     kong_admin_token:
       valueFrom:
         secretKeyRef:
           name: kong-config-secret
           key: password
